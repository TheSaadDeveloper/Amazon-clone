{"ast":null,"code":"import _regeneratorRuntime from\"D:\\\\Coding Stuff\\\\My_Projects\\\\CleverProgrammer_Projects\\\\amazon-clone\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"D:\\\\Coding Stuff\\\\My_Projects\\\\CleverProgrammer_Projects\\\\amazon-clone\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"D:\\\\Coding Stuff\\\\My_Projects\\\\CleverProgrammer_Projects\\\\amazon-clone\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import'./Payment.css';import{useStateValue}from\"./StateProvider\";import CheckoutProduct from\"./CheckoutProduct\";import{useHistory}from\"react-router-dom\";import{CardElement,useStripe,useElements}from\"@stripe/react-stripe-js\";import CurrencyFormat from\"react-currency-format\";import{getBasketTotal}from\"./reducer\";import axios from'./axios';import{db}from\"./firebase\";function Payment(){var history=useHistory();var _useStateValue=useStateValue(),_useStateValue2=_slicedToArray(_useStateValue,2),_useStateValue2$=_useStateValue2[0],basket=_useStateValue2$.basket,user=_useStateValue2$.user,dispatch=_useStateValue2[1];var stripe=useStripe();var elements=useElements();var _useState=useState(false),_useState2=_slicedToArray(_useState,2),succeded=_useState2[0],setSucceeded=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),processing=_useState4[0],setProcessing=_useState4[1];// ! we use \"error\" to capture the error if there is some \nvar _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),error=_useState6[0],setError=_useState6[1];var _useState7=useState(true),_useState8=_slicedToArray(_useState7,2),disabled=_useState8[0],setDisabled=_useState8[1];// ! this will tell stripe to give the information that client just entered (number) !\nvar _useState9=useState(true),_useState10=_slicedToArray(_useState9,2),clientSecret=_useState10[0],setClientSecret=_useState10[1];useEffect(function(){// generate the special stripe secret which allows us to charge a customer\nvar getClientSecret=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios({method:'post',// Stripe expects the total in a currencies subunits\nurl:\"/payments/create?total=\".concat(getBasketTotal(basket)*100)});case 2:response=_context.sent;setClientSecret(response.data.clientSecret);case 4:case\"end\":return _context.stop();}}},_callee);}));return function getClientSecret(){return _ref.apply(this,arguments);};}();getClientSecret();},[basket]);// ? here when the component reloads we run this function as well we run when the basket component changes\nconsole.log('The Secret Is >>> ',clientSecret);console.log('User : ',user);var handleSubmit=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(event){var payload;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:// do all the fancy stripe stuff...\nevent.preventDefault();setProcessing(true);_context2.next=4;return stripe.confirmCardPayment(clientSecret,{payment_method:{card:elements.getElement(CardElement)}}).then(function(_ref3){var paymentIntent=_ref3.paymentIntent;console.log(\"thisone\",paymentIntent);// console.log('paymentIntent : ',paymentIntent.id);\n// ! paymentIntent = payment confirmation\ndb.collection('users').doc(user===null||user===void 0?void 0:user.uid).collection('orders').doc(paymentIntent.id).set({basket:basket,amount:paymentIntent.amount,created:paymentIntent.created});setSucceeded(true);setError(null);setProcessing(false);dispatch({type:'EMPTY_BASKET'});history.replace('/orders');});case 4:payload=_context2.sent;case 5:case\"end\":return _context2.stop();}}},_callee2);}));return function handleSubmit(_x){return _ref2.apply(this,arguments);};}();var handleChange=function handleChange(event){// ? this function listens for the changes in the CardElement\n// ? and diplay any errors as the customer types ther card detais.\nsetDisabled(false);setProcessing(false);setError(event.error?event.error.message:\"success\");};return/*#__PURE__*/React.createElement(\"div\",{className:\"payment\"},/*#__PURE__*/React.createElement(\"h1\",{style:{cursor:'pointer'},align:\"center\",onClick:function onClick(e){return history.push('/');}},\"Checkout (\",/*#__PURE__*/React.createElement(\"span\",{style:{color:'green',fontWeight:'bold'}},basket.length),\" items)\"),/*#__PURE__*/React.createElement(\"div\",{className:\"payment__container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"payment__section\"},/*#__PURE__*/React.createElement(\"div\",{className:\"payment__title\"},/*#__PURE__*/React.createElement(\"h3\",null,\"Delivery Address\")),/*#__PURE__*/React.createElement(\"div\",{className:\"payment__address\"},/*#__PURE__*/React.createElement(\"h5\",null,user===null||user===void 0?void 0:user.email),/*#__PURE__*/React.createElement(\"p\",null,\"#147 React Lane\"),/*#__PURE__*/React.createElement(\"p\",null,\"California , \"),/*#__PURE__*/React.createElement(\"p\",null,\"USA -3290\"))),/*#__PURE__*/React.createElement(\"div\",{className:\"payment__section\"},/*#__PURE__*/React.createElement(\"div\",{className:\"payment__title\"},/*#__PURE__*/React.createElement(\"h3\",null,\"Review items and delivery\")),/*#__PURE__*/React.createElement(\"div\",{className:\"payment__items\"},basket.map(function(item){return/*#__PURE__*/React.createElement(CheckoutProduct,{id:item.id,title:item.title,image:item===null||item===void 0?void 0:item.image,price:item.price,ratings:item.ratings,key:item.id});}))),/*#__PURE__*/React.createElement(\"div\",{className:\"payment__section\"},/*#__PURE__*/React.createElement(\"div\",{className:\"payment__title\"},/*#__PURE__*/React.createElement(\"h3\",null,\"Payment Method\")),/*#__PURE__*/React.createElement(\"div\",{className:\"payment__details\"},/*#__PURE__*/React.createElement(\"form\",{onSubmit:handleSubmit},/*#__PURE__*/React.createElement(CardElement,{onChange:handleChange}),/*#__PURE__*/React.createElement(\"div\",{className:\"payment__priceCantainer\"},/*#__PURE__*/React.createElement(CurrencyFormat,{renderText:function renderText(value){return/*#__PURE__*/React.createElement(\"h3\",null,\"Order Total : \",value);},decimalScale:2,value:getBasketTotal(basket),displayType:\"text\",thousandSeperator:true,prefix:\"$\"}),/*#__PURE__*/React.createElement(\"button\",{disabled:processing||disabled||succeded,type:\"submit\"},/*#__PURE__*/React.createElement(\"span\",null,processing?/*#__PURE__*/React.createElement(\"p\",null,\"Processing\"):\"buy Now\"))),error&&/*#__PURE__*/React.createElement(\"div\",null,error))))));}export default Payment;","map":{"version":3,"sources":["D:/Coding Stuff/My_Projects/CleverProgrammer_Projects/amazon-clone/src/Payment.js"],"names":["React","useState","useEffect","useStateValue","CheckoutProduct","useHistory","CardElement","useStripe","useElements","CurrencyFormat","getBasketTotal","axios","db","Payment","history","basket","user","dispatch","stripe","elements","succeded","setSucceeded","processing","setProcessing","error","setError","disabled","setDisabled","clientSecret","setClientSecret","getClientSecret","method","url","response","data","console","log","handleSubmit","event","preventDefault","confirmCardPayment","payment_method","card","getElement","then","paymentIntent","collection","doc","uid","id","set","amount","created","type","replace","payload","handleChange","message","cursor","e","push","color","fontWeight","length","email","map","item","title","image","price","ratings","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './Payment.css';\r\nimport { useStateValue } from \"./StateProvider\";\r\nimport CheckoutProduct from \"./CheckoutProduct\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\r\nimport CurrencyFormat from \"react-currency-format\";\r\nimport { getBasketTotal } from \"./reducer\";\r\nimport axios from './axios';\r\nimport { db } from \"./firebase\";\r\n\r\nfunction Payment() {\r\n     \r\n    const history = useHistory();\r\n    const [{basket,user},dispatch] = useStateValue();\r\n\r\n    const stripe = useStripe();\r\n    const elements = useElements();\r\n\r\n    const [succeded, setSucceeded] = useState(false);\r\n    const [processing, setProcessing] = useState(true);\r\n\r\n    // ! we use \"error\" to capture the error if there is some \r\n    const [error, setError] = useState(null);\r\n    const [disabled, setDisabled] = useState(true);\r\n\r\n    // ! this will tell stripe to give the information that client just entered (number) !\r\n    const [clientSecret , setClientSecret] = useState(true);\r\n\r\n    useEffect(() => {\r\n        // generate the special stripe secret which allows us to charge a customer\r\n        const getClientSecret = async () => {\r\n            const response = await axios({\r\n                method: 'post',\r\n                // Stripe expects the total in a currencies subunits\r\n                url: `/payments/create?total=${getBasketTotal(basket) * 100}`\r\n            });\r\n            setClientSecret(response.data.clientSecret);\r\n        }\r\n\r\n        getClientSecret();\r\n    }, [basket]);\r\n    // ? here when the component reloads we run this function as well we run when the basket component changes\r\n\r\n    console.log('The Secret Is >>> ', clientSecret);\r\n    console.log('User : ', user)\r\n\r\n     const handleSubmit = async (event) => {\r\n        // do all the fancy stripe stuff...\r\n        event.preventDefault();\r\n        setProcessing(true);\r\n\r\n        const payload = await stripe.confirmCardPayment(clientSecret, {\r\n\r\n            payment_method: {\r\n                card: elements.getElement(CardElement)\r\n            }\r\n        }).then(({ paymentIntent }) => {\r\n            console.log(\"thisone\" ,paymentIntent )\r\n            // console.log('paymentIntent : ',paymentIntent.id);\r\n            // ! paymentIntent = payment confirmation\r\n\r\n            db.collection('users').doc(user?.uid)\r\n                .collection('orders').doc(paymentIntent.id)\r\n              .set({\r\n                  basket: basket,\r\n                  amount: paymentIntent.amount,\r\n                  created: paymentIntent.created\r\n              })\r\n\r\n            setSucceeded(true);\r\n            setError(null)\r\n            setProcessing(false)\r\n\r\n            dispatch({\r\n                type: 'EMPTY_BASKET'\r\n            })\r\n\r\n            history.replace('/orders')\r\n        })\r\n    }\r\n\r\n    const handleChange = (event) =>{\r\n        // ? this function listens for the changes in the CardElement\r\n        // ? and diplay any errors as the customer types ther card detais.\r\n\r\n        setDisabled(false);\r\n        setProcessing(false);\r\n        setError(event.error ? event.error.message : \"success\");\r\n    }\r\n\r\n    return (\r\n        <div className=\"payment\">\r\n                <h1 style={{cursor:'pointer'}} align=\"center\" onClick={e=>history.push('/')}>Checkout (<span style={{color:'green',fontWeight:'bold'}}>{basket.length}</span> items)</h1>\r\n            <div className=\"payment__container\">\r\n                {/* Payment Section -> Delivery Address */}\r\n                <div className=\"payment__section\">\r\n                    <div className=\"payment__title\">\r\n                    <h3>Delivery Address</h3>\r\n                    </div> \r\n                    <div className=\"payment__address\">\r\n                        <h5>{user?.email}</h5>\r\n                        <p>#147 React Lane</p>\r\n                        <p>California , </p>\r\n                        <p>USA -3290</p>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Payment Section -> Review Items */}\r\n                <div className=\"payment__section\">\r\n                    <div className=\"payment__title\">\r\n                        <h3>Review items and delivery</h3>\r\n                    </div>\r\n\r\n                    <div className=\"payment__items\">\r\n                        {basket.map(item=>(\r\n                        <CheckoutProduct \r\n                        id={item.id}\r\n                        title={item.title}\r\n                        image={item?.image}\r\n                        price={item.price}\r\n                        ratings={item.ratings}\r\n                        key={item.id}\r\n                        /> \r\n                        ))}\r\n                    </div>\r\n                </div>\r\n                {/* Payment Section -> Payment Method */}\r\n                <div className=\"payment__section\">\r\n                    <div className=\"payment__title\">\r\n                        <h3>Payment Method</h3>\r\n                    </div>\r\n                    <div className=\"payment__details\">\r\n                        {/* Stripe magic will go here */}\r\n\r\n                        <form onSubmit={handleSubmit}>\r\n                                <CardElement onChange={handleChange} />\r\n\r\n                            <div className=\"payment__priceCantainer\">\r\n                                <CurrencyFormat \r\n                                    renderText={(value) =>(\r\n                                        <h3>Order Total : {value}</h3>\r\n                                    )}\r\n                                    decimalScale={2}\r\n                                    value={getBasketTotal(basket)}\r\n                                    displayType={\"text\"}\r\n                                    thousandSeperator={true}\r\n                                    prefix={\"$\"}\r\n                                />\r\n                                <button disabled={processing || disabled || succeded} type=\"submit\">\r\n                                    <span>{processing ? <p>Processing</p> : \"buy Now\"}</span>\r\n                                </button>\r\n                            </div>\r\n                            {/* Errors*/}\r\n                            {error && <div>{error}</div>}\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n    \r\nexport default Payment\r\n"]},"metadata":{},"sourceType":"module"}