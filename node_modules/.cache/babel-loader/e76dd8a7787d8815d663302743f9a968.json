{"ast":null,"code":"var _jsxFileName = \"D:\\\\Coding Stuff\\\\My_Projects\\\\CleverProgrammer_Projects\\\\amazon-clone\\\\src\\\\Payment.js\";\nimport React, { useEffect, useState } from 'react';\nimport './Payment.css';\nimport { useStateValue } from './StateProvider';\nimport { useHistory } from 'react-router-dom';\nimport CheckoutProduct from './CheckoutProduct';\nimport CurrencyFormat from 'react-currency-format';\nimport { CardElement, useElements, useStripe } from '@stripe/react-stripe-js';\nimport { getBasketTotal } from './reducer';\nimport axios from 'axios';\nimport { Card } from '@material-ui/core';\n\nfunction Payment() {\n  const history = useHistory();\n  const [{\n    basket\n  }, dispatch] = useStateValue();\n  const stripe = useStripe();\n  const elements = useElements();\n  const [succeded, setSucceeded] = useState(false);\n  const [processing, setProcessing] = useState(true); // ! we use \"error\" to capture the error if there is some \n\n  const [error, setError] = useState(null);\n  const [disabled, setDisabled] = useState(true); // ! this will tell stripe to give the information that client just entered (number) !\n\n  const [clientSecret, setClientSecret] = useState(true);\n  useEffect(() => {\n    // * generate the special stripe secret which us to change a customer\n    const getClientSecret = async () => {\n      const response = await axios({\n        method: 'post',\n        url: '/payment/create?total=${getBasketTotal(basket) = 100}'\n      });\n      setClientSecret(response.data.clientSecret);\n    };\n  }, [basket]); // ? here when the component reloads we run this function as well we run when the basket component changes\n\n  const handleSubmit = async event => {\n    // ? this function does all the fancy stripe stuff....\n    event.preventDefault();\n    setProcessing(true);\n    const payload = await stripe.confirmCardPayment(clientSecret, {\n      payment_method: {\n        card: elements.getElement(CardElement)\n      }\n    }).then({\n      paymentIntent\n    });\n\n    const handleChange = event => {\n      // ? this function listens for the changes in the CardElement\n      // ? and diplay any errors as the customer types ther card detais.\n      setDisabled(event.empty);\n      setError(event.error ? event.error.message : \"success\");\n    };\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"payment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      style: {\n        cursor: 'pointer'\n      },\n      align: \"center\",\n      onClick: e => history.push('/'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }, \"Checkout (\", /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: 'green',\n        fontWeight: 'bold'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 104\n      }\n    }, basket.length), \" items)\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"payment__container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"payment__section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"payment__title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }\n    }, \"Delivery Address\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"payment__address\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 25\n      }\n    }, \"#147 React Lane\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 25\n      }\n    }, \"California , \"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 25\n      }\n    }, \"USA -3290\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"payment__section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"payment__title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 25\n      }\n    }, \"Review items and delivery\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"payment__items\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }\n    }, basket.map(item => /*#__PURE__*/React.createElement(CheckoutProduct, {\n      id: item.id,\n      title: item.title,\n      image: item === null || item === void 0 ? void 0 : item.image,\n      price: item.price,\n      ratings: item.ratings,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 25\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"payment__section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"payment__title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 25\n      }\n    }, \"Payment Method\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"payment__details\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(CardElement, {\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"payment__priceCantainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(CurrencyFormat, {\n      renderText: value => /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 41\n        }\n      }, \"Order Total : \", value),\n      decimalScale: 2,\n      value: getBasketTotal(basket),\n      displayType: \"text\",\n      thousandSeperator: true,\n      prefix: \"$\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      disabled: processing || disabled || succeded,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 37\n      }\n    }, processing ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 57\n      }\n    }, \"Processing\") : \"buy Now\"))), error && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 39\n      }\n    }, error))))));\n  };\n}\n\nexport default Payment;","map":{"version":3,"sources":["D:/Coding Stuff/My_Projects/CleverProgrammer_Projects/amazon-clone/src/Payment.js"],"names":["React","useEffect","useState","useStateValue","useHistory","CheckoutProduct","CurrencyFormat","CardElement","useElements","useStripe","getBasketTotal","axios","Card","Payment","history","basket","dispatch","stripe","elements","succeded","setSucceeded","processing","setProcessing","error","setError","disabled","setDisabled","clientSecret","setClientSecret","getClientSecret","response","method","url","data","handleSubmit","event","preventDefault","payload","confirmCardPayment","payment_method","card","getElement","then","paymentIntent","handleChange","empty","message","cursor","e","push","color","fontWeight","length","map","item","id","title","image","price","ratings","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './Payment.css';\r\nimport { useStateValue } from './StateProvider';\r\nimport { useHistory } from 'react-router-dom';\r\nimport CheckoutProduct from './CheckoutProduct';\r\nimport CurrencyFormat from 'react-currency-format';\r\nimport { CardElement, useElements, useStripe } from '@stripe/react-stripe-js';\r\nimport { getBasketTotal } from './reducer';\r\nimport axios from 'axios';\r\nimport { Card } from '@material-ui/core';\r\n\r\nfunction Payment() {\r\n\r\n    const history = useHistory();\r\n    const [{basket},dispatch] = useStateValue();\r\n\r\n    const stripe = useStripe();\r\n    const elements = useElements();\r\n\r\n    const [succeded, setSucceeded] = useState(false);\r\n    const [processing, setProcessing] = useState(true);\r\n\r\n    // ! we use \"error\" to capture the error if there is some \r\n    const [error, setError] = useState(null);\r\n    const [disabled, setDisabled] = useState(true);\r\n\r\n    // ! this will tell stripe to give the information that client just entered (number) !\r\n    const [clientSecret , setClientSecret] = useState(true);\r\n\r\n    useEffect(()=>{\r\n        // * generate the special stripe secret which us to change a customer\r\n        const getClientSecret = async () =>{\r\n            const response = await axios ({\r\n                method: 'post',\r\n                url:'/payment/create?total=${getBasketTotal(basket) = 100}'\r\n            });\r\n\r\n            setClientSecret(response.data.clientSecret);\r\n        }\r\n\r\n    },[basket])    \r\n    // ? here when the component reloads we run this function as well we run when the basket component changes\r\n\r\n    const handleSubmit = async (event) =>{\r\n        // ? this function does all the fancy stripe stuff....\r\n        event.preventDefault();\r\n        setProcessing(true);\r\n\r\n        const payload = await stripe.confirmCardPayment(clientSecret , {\r\n            payment_method:{\r\n                card:elements.getElement(CardElement)\r\n            }\r\n        }).then(({paymentIntent}))\r\n\r\n    const handleChange = (event) =>{\r\n        // ? this function listens for the changes in the CardElement\r\n        // ? and diplay any errors as the customer types ther card detais.\r\n\r\n        setDisabled(event.empty);\r\n        setError(event.error ? event.error.message : \"success\");\r\n    }\r\n\r\n    return (\r\n        <div className=\"payment\">\r\n                <h1 style={{cursor:'pointer'}} align=\"center\" onClick={e=>history.push('/')}>Checkout (<span style={{color:'green',fontWeight:'bold'}}>{basket.length}</span> items)</h1>\r\n            <div className=\"payment__container\">\r\n                {/* Payment Section -> Delivery Address */}\r\n                <div className=\"payment__section\">\r\n                    <div className=\"payment__title\">\r\n                    <h3>Delivery Address</h3>\r\n                    </div> \r\n                    <div className=\"payment__address\">\r\n                        <p>#147 React Lane</p>\r\n                        <p>California , </p>\r\n                        <p>USA -3290</p>\r\n                    </div>\r\n                </div>   \r\n                {/* Payment Section -> Review Items */}\r\n                <div className=\"payment__section\">\r\n                    <div className=\"payment__title\">\r\n                        <h3>Review items and delivery</h3>\r\n                    </div>\r\n\r\n                    <div className=\"payment__items\">\r\n                        {basket.map(item=>(\r\n                        <CheckoutProduct \r\n                        id={item.id}\r\n                        title={item.title}\r\n                        image={item?.image}\r\n                        price={item.price}\r\n                        ratings={item.ratings}\r\n                        /> \r\n                        ))}\r\n                    </div>\r\n                </div>\r\n                {/* Payment Section -> Payment Method */}\r\n                <div className=\"payment__section\">\r\n                    <div className=\"payment__title\">\r\n                        <h3>Payment Method</h3>\r\n                    </div>\r\n                    <div className=\"payment__details\">\r\n                        {/* Stripe magic will go here */}\r\n\r\n                        <form onSubmit={handleSubmit}>\r\n                                <CardElement onChange={handleChange} />\r\n\r\n                            <div className=\"payment__priceCantainer\">\r\n                                <CurrencyFormat \r\n                                    renderText={(value) =>(\r\n                                        <h3>Order Total : {value}</h3>\r\n                                    )}\r\n                                    decimalScale={2}\r\n                                    value={getBasketTotal(basket)}\r\n                                    displayType={\"text\"}\r\n                                    thousandSeperator={true}\r\n                                    prefix={\"$\"}\r\n                                />\r\n                                <button disabled={processing || disabled || succeded}>\r\n                                    <span>{processing ? <p>Processing</p> : \"buy Now\"}</span>\r\n                                </button>\r\n                            </div>\r\n                            {/* Errors*/}\r\n                            {error && <div>{error}</div>}\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\nexport default Payment\r\n"]},"metadata":{},"sourceType":"module"}