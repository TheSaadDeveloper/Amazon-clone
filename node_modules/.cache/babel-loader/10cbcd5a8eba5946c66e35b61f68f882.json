{"ast":null,"code":"export const initialState = {\n  products: [],\n  basket: [],\n  user: null,\n  searchTitle: null\n}; // this is called Selector\n\nexport const getBasketTotal = basket => basket === null || basket === void 0 ? void 0 : basket.reduce((product, totalPrice) => Number(totalPrice.price) + Number(product), 0);\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'EMPTY_BASKET':\n      return { ...state,\n        basket: []\n      };\n\n    case 'ALL_PRODUCTS':\n      return { ...state,\n        products: [...state.products, action.products]\n      };\n\n    case 'CLEAR_PRODUCTS':\n      return { ...state,\n        products: []\n      };\n\n    case 'ADD_TO_BASKET':\n      return { ...state,\n        basket: [...state.basket, action.item]\n      };\n\n    case \"REMOVE_FROM_BASKET\":\n      // ? this gets you the current index you are in using the findIndex\n      const index = state.basket.findIndex(basketItem => basketItem.id === action.id);\n      let newBasket = [...state.basket];\n\n      if (index >= 0) {\n        newBasket.splice(index, 1);\n      } else {\n        console.warn('Cant remove product as its not in basket !');\n      }\n\n      return { ...state,\n        basket: newBasket\n      };\n\n    case \"SET_USER\":\n      return { ...state,\n        user: action.user\n      };\n    // ! Search Component\n\n    case \"SEARCH_VALUE\":\n      return { ...state,\n        searchTitle: action.searchTitle.toLowerCase()\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["D:/Coding_Stuff/My_Projects/CleverProgrammer_Projects/amazon-clone/src/reducer.js"],"names":["initialState","products","basket","user","searchTitle","getBasketTotal","reduce","product","totalPrice","Number","price","reducer","state","action","type","item","index","findIndex","basketItem","id","newBasket","splice","console","warn","toLowerCase"],"mappings":"AAAA,OAAO,MAAMA,YAAY,GAAG;AACxBC,EAAAA,QAAQ,EAAC,EADe;AAExBC,EAAAA,MAAM,EAAC,EAFiB;AAGxBC,EAAAA,IAAI,EAAC,IAHmB;AAIxBC,EAAAA,WAAW,EAAC;AAJY,CAArB,C,CAOP;;AAEA,OAAO,MAAMC,cAAc,GAAIH,MAAD,IAC1BA,MAD0B,aAC1BA,MAD0B,uBAC1BA,MAAM,CAAEI,MAAR,CAAe,CAACC,OAAD,EAASC,UAAT,KAAuBC,MAAM,CAACD,UAAU,CAACE,KAAZ,CAAN,GAA2BD,MAAM,CAACF,OAAD,CAAvE,EAAmF,CAAnF,CADG;;AAIP,MAAMI,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAkB;AAC9B,UAAOA,MAAM,CAACC,IAAd;AAEI,SAAK,cAAL;AACI,aAAO,EACH,GAAGF,KADA;AAEHV,QAAAA,MAAM,EAAC;AAFJ,OAAP;;AAKJ,SAAK,cAAL;AACI,aAAM,EACF,GAAGU,KADD;AAEFX,QAAAA,QAAQ,EAAC,CAAC,GAAGW,KAAK,CAACX,QAAV,EAAoBY,MAAM,CAACZ,QAA3B;AAFP,OAAN;;AAKJ,SAAK,gBAAL;AACI,aAAM,EACF,GAAGW,KADD;AAEFX,QAAAA,QAAQ,EAAC;AAFP,OAAN;;AAKJ,SAAK,eAAL;AACA,aAAO,EACH,GAAGW,KADA;AAEHV,QAAAA,MAAM,EAAC,CAAC,GAAGU,KAAK,CAACV,MAAV,EAAkBW,MAAM,CAACE,IAAzB;AAFJ,OAAP;;AAKA,SAAK,oBAAL;AACI;AACA,YAAMC,KAAK,GAAGJ,KAAK,CAACV,MAAN,CAAae,SAAb,CACTC,UAAD,IAAgBA,UAAU,CAACC,EAAX,KAAkBN,MAAM,CAACM,EAD/B,CAAd;AAIA,UAAIC,SAAS,GAAG,CAAC,GAAGR,KAAK,CAACV,MAAV,CAAhB;;AAEA,UAAGc,KAAK,IAAI,CAAZ,EAAc;AACVI,QAAAA,SAAS,CAACC,MAAV,CAAiBL,KAAjB,EAAuB,CAAvB;AACH,OAFD,MAEK;AACDM,QAAAA,OAAO,CAACC,IAAR,CACI,4CADJ;AAGH;;AAED,aAAO,EACH,GAAGX,KADA;AAEHV,QAAAA,MAAM,EAACkB;AAFJ,OAAP;;AAKJ,SAAK,UAAL;AACI,aAAO,EACH,GAAGR,KADA;AAEHT,QAAAA,IAAI,EAACU,MAAM,CAACV;AAFT,OAAP;AAKJ;;AAEA,SAAK,cAAL;AACI,aAAM,EACF,GAAGS,KADD;AAEFR,QAAAA,WAAW,EAACS,MAAM,CAACT,WAAP,CAAmBoB,WAAnB;AAFV,OAAN;;AAKJ;AACI,aAAOZ,KAAP;AA9DR;AAgEH,CAjED;;AAmEA,eAAeD,OAAf","sourcesContent":["export const initialState = {\r\n    products:[],\r\n    basket:[],\r\n    user:null,\r\n    searchTitle:null\r\n}\r\n\r\n// this is called Selector\r\n\r\nexport const getBasketTotal = (basket) =>\r\n    basket?.reduce((product,totalPrice)=> Number(totalPrice.price) + Number(product) , 0);\r\n\r\n\r\nconst reducer = (state, action) =>{\r\n    switch(action.type){\r\n\r\n        case 'EMPTY_BASKET':\r\n            return {\r\n                ...state,\r\n                basket:[]\r\n            }\r\n\r\n        case 'ALL_PRODUCTS':\r\n            return{\r\n                ...state,\r\n                products:[...state.products, action.products]\r\n            };\r\n\r\n        case 'CLEAR_PRODUCTS':\r\n            return{\r\n                ...state,\r\n                products:[]\r\n            }\r\n\r\n        case 'ADD_TO_BASKET':\r\n        return {\r\n            ...state,\r\n            basket:[...state.basket ,action.item]\r\n        };\r\n\r\n        case \"REMOVE_FROM_BASKET\":\r\n            // ? this gets you the current index you are in using the findIndex\r\n            const index = state.basket.findIndex(\r\n                (basketItem) => basketItem.id === action.id\r\n            );\r\n\r\n            let newBasket = [...state.basket];\r\n\r\n            if(index >= 0){\r\n                newBasket.splice(index,1);\r\n            }else{\r\n                console.warn(\r\n                    'Cant remove product as its not in basket !'\r\n                )\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                basket:newBasket\r\n            }\r\n\r\n        case \"SET_USER\":\r\n            return {\r\n                ...state,\r\n                user:action.user\r\n            }\r\n\r\n        // ! Search Component\r\n\r\n        case \"SEARCH_VALUE\":\r\n            return{\r\n                ...state,\r\n                searchTitle:action.searchTitle.toLowerCase()\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};  \r\n\r\nexport default reducer"]},"metadata":{},"sourceType":"module"}